{
  "net_name": "match_pyramid_dot",
  "global":{
      "model_type": "PY",
      "weights_file": "examples/robust04/weights/matchpyramid_dot.tune_valid.test.5.k_3x3.feat_map8.dense128x128.iter100.bs32.steps1000.dropout0.lr0_0001.weights",
      "save_weights_iters": 100,
      "num_iters": 150,
      "display_interval": 1000,
      "test_weights_iters": 100,
      "optimizer": "adam",
      "learning_rate": 0.0001,
      "best_weights_file": "./examples/robust04/matchpyramid_dot.tune_valid.test.5.k_3x3.feat_map8.dense128x128.weights.best.hdf5"
  },
  "inputs": {
    "share": {
        "text1_corpus": "./data/robust04/corpus_new_n_stem_filtered_rob04_embed.txt",
        "text2_corpus": "./data/robust04/corpus_new_n_stem_filtered_rob04_embed.txt",
        "use_dpool": true,
        "embed_size": 300,
        "embed_path": "./data/robust04/embed_rob04_new_n_stem_d300_norm",
        "vocab_size": 106664,
        "train_embed": false,
        "target_mode": "ranking",
        "text1_maxlen": 4,
        "text2_maxlen": 500
    },
    "train": {
        "input_type": "PairGenerator", 
        "phase": "TRAIN",
        "use_iter": false,
        "query_per_iter": 50,
        "batch_per_iter": 5,
        "batch_size": 32,
        "relation_file": "./data/robust04/cv_splits/train.5.txt"
    },
    "test": {
        "input_type": "ListGenerator", 
        "phase": "EVAL",
        "batch_list": 1,
        "relation_file": "./data/robust04/cv_splits/valid.5.txt"
    },
    "predict": {
        "input_type": "ListGenerator", 
        "phase": "PREDICT",
        "batch_list": 1,
        "relation_file": "./data/robust04/cv_splits/test.5.ql.txt"
    }
  },
  "outputs": {
    "predict": {
      "save_format": "TREC",
      "save_path": "./examples/robust04/predict.test.5.matchpyramid_dot.tune_valid.k_3x3.feat_map8.dense128x128.iter100.bs32.steps1000.dropout0.lr0_0001.txt",
      "enable_cometml": true,
      "experiment_key": "84cde6e2805d400a9fcfd16ee884f2e1"
    }
  },
  "model": {
    "model_path": "matchzoo/models/",
    "model_py": "matchpyramid.MatchPyramid",
    "setting": {
        "kernel_count": 8,
        "kernel_size": [3, 3],
        "dpool_size": [2, 10],
        "hidden_sizes": [128, 128],
        "similarity": "dot",
        "dropout_rate": 0.0
    }
  },
  "losses": [ 
    {
       "object_name": "rank_hinge_loss" ,
       "object_params": {
            "margin": 1.0
       }
    }
  ],
  "metrics": [ "precision@10", "precision@20", "ndcg@5", "ndcg@10", "ndcg@20", "map" ]
}

